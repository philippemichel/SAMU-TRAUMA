---
subtitle: "Rapport statistique v1.2"
---

```{r}
#| label: info

rm(list = ls())
#
library(corrplot)
library(baseph)
library(ggsci)
library(readODS)
library(janitor)
library(visdat)
library(GGally)
library(epiDisplay)
library(plotROC)
library(emmeans)
library(tidyverse)
library(kableExtra)
library(gtsummary)
library(forestmodel)
library(fmsb)
library(labelled)
#
classeur <- "samutraumas.ods"
expx <- TRUE
if (expx) {
  file.create(classeur)
  file.remove(classeur)
  write_ods(iris, classeur)
}

# sessionInfo()
theme_gtsummary_language(language = "fr", decimal.mark = ",")
theme_gtsummary_journal(journal = "jama")
options(OutDec = ",")
ptest <- list(all_continuous() ~ "wilcox.test", all_categorical() ~ "chisq.test")
#
load("datas/samutraumas.RData")
```

```{r}
#| label: macro

ldf <- function(df) {
  ldf <- nrow(df)
  return(paste0("Cette analyse porte sur ", ldf, " patients."))
}
```




# Qualité des données

## Corrélations anormales

```{r}
#| label: cor-prep

corx <- function(prof, titx) {
  tit <- paste0("Corrélations ", titx)
  prof |>
    remove_constant() |>
    mutate_if(is.factor, as.numeric) |>
    dplyr::select(!id) |>
    ggcorr(drop = TRUE, hjust = 0.9) +
    labs(
      title = tit,
      y = "n",
      caption = "Corrélations. Validation interne du questionnaire."
    ) +
    theme_minimal() +
    theme(
      plot.title = element_text(size = 14, face = "bold"),
      plot.subtitle = element_text(size = 12),
      axis.title.x = element_blank(),
      legend.title = element_blank(),
      axis.title.y = element_blank(), ,
      axis.text.x = element_text(size = 12),
      axis.text.y = element_text(size = 12),
      legend.position = "right"
    )
}
```


```{r}
#| label: fig-corregul
#| fig-cap: Corrélations internes
#| eval: true
tt |>
  dplyr::select(!starts_with("destin")) |>
  corx("")
```

Les seules corrélations inattendues & potentiellement gênantes sont celles entre `vittel_circonstance`, `vittel_pec` & `iss_tranche`. À noter, de fortes corrélations entre la transfusion sanguine & l'âge,Vittel (circonstance & examen initial) qui seraient à étudier mais les très faibles effectifs rendent probable de faux résultats. 

## Données manquantes

```{r}
#| label: fig-manq-apt
#| fig-cap: Données manquantes (questionnaire patient)

tt |>
  dplyr::select(-c(id, horaire)) |>
  vis_dat(palette = "qual")
```


Il y a trois données manquantes sur la variable de tri principale `Triage`. Le score ISS demeure mal renseigné en particulier pour tous les patients transportés en première intention en TC niveau 3 la donnée est absente.

# Descriptif

::: {.callout-note}
Dans tous les tableaux, pour les variables en `Oui/Non` seules les réponses `Oui` sont affichées.
:::


Les données concernent `r nrow(tt)` cas & sont réparties sur trois fichiers :

-   Régulation (`r ncol(regulation) - 1` variables)
-   Intervention (`r ncol(intervention) - 1` variables)
-   Destination (`r ncol(destination) - 1` variables)

## Régulation

```{r}
#| label: tbl-regul
#| tbl-cap: Description de la population - Régulation

tt |>
  dplyr::select(sexe, age, intox) |>
  tbl_summary(value = list(intox = "Oui")) |>
  add_n() |>
  bold_labels() |>
  modify_header(label ~ " ") |>
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "regul", lg = TRUE)
```

```{r}
#| label: fig-pyr
#| fig-cap: Pyramide des âges

pyramid(tt$age, tt$sexe, col.gender = c("pink", "lightblue"), main = "Pyramide des âges")
```

On retrouve la prédominance masculine & le jeune âge des patients, habituels en traumatologie, ce qui valide la qualité de l'échantillon.

## Intervention

```{r}
#| label: tbl-inter
#| tbl-cap: Description de la population - Intervention

tt |>
  dplyr::select(secondaire:transfusion_sanguine) |>
  tbl_summary(
    missing = "no",
    type = list(secondaire ~ "dichotomous"),
    value = list(
      secondaire = "Oui",
      demande_vsav = "Oui",
      intox = "Oui",
      vittel_examen_initial = "Oui",
      vittel_circonstance = "Oui",
      vittel_pec = "Oui",
      vittel_lesions = "Oui",
      vittel_caracteristiques = "Oui",
      transfusion_sanguine = "Oui"
    )
  ) |>
  add_n() |>
  bold_labels() |>
  modify_header(label ~ " ") |>
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "interv", lg = TRUE)
```


```{r}
#| label: fig-vittel
#| fig-cap: Critères de Vittel


tt |>
  dplyr::select(starts_with("vittel")) |>
  pivot_longer(
    cols = everything(),
    names_to = "item",
    values_to = "value"
  ) |>
  mutate(item = fct_recode(item,
    "Caractéristiques" = "vittel_caracteristiques",
    "Circonstance" = "vittel_circonstance",
    "Examen initial" = "vittel_examen_initial",
    "Lésions" = "vittel_lesions",
    "PEC" = "vittel_pec"
  )) |>
  dplyr::filter(value == "Oui") |>
  ggplot() +
  aes(x = fct_infreq(item), fill = item) +
  geom_bar(stat = "count") +
  labs(
    title = "Critères de Vittel",
    subtitle = "Fréquence dans la population",
    x = "",
    y = "n",
    caption = "",
    fill = ""
  ) +
  theme_light() +
  scale_fill_jama() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    plot.subtitle = element_text(size = 12),
    axis.title.x = element_blank(),
    legend.title = element_text(size = 12),
    axis.title.y = element_text(
      size = 12,
      angle = 0,
      vjust = .5
    ),
    axis.text.x = element_text(size = 10, angle = 20, hjust = 0.8),
    axis.text.y = element_text(size = 12),
    legend.position = "none"
  )
```

\newpage
## Destination

```{r}
#| label: tbl-desti
#| tbl-cap: Destination finale selon la première orientation

tt |>
  dplyr::select(niveau_tc_1, nivfin) |>
  tbl_summary(
    by = nivfin,
    percent = "row",
    missing = "no",
    label = list(niveau_tc_1 = "Destination initiale")
  ) |>
   modify_spanning_header(c("stat_1", "stat_2") ~ "**Destination finale**") |>
  add_n() |>
  bold_labels() |>
  modify_header(label ~ " ") |>
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "desti", lg = TRUE)
```

4 % des patients transportés en première intention en niveau 3 ont du être transférés secondairement en niveau 1. 


# Critère principal

*Évaluation de l’orientation du patient traumatisé grave après bilan lésionnel post SMUR en sur trié, normo trié et sous trié.*

```{r}
#| label: critprincprepa

zz <- tt |>
  dplyr::select(triage) |>
  drop_na(triage)
llf <- ldf(zz)
```

`r llf`

```{r}
#| label: tbl-princ1
#| tbl-cap: Qualité de l'orientation du patient traumatisé grave


zz |>
  tbl_summary(missing = "no",
              label = list(triage = "Qualité du triage")) |>
  add_n() |>
  bold_labels() |>
  modify_header(label ~ " ") |>
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "princ1", lg = TRUE)
```



```{r}
#| label: fig-crit1
#| fig-cap: Qualité de l'orientation du patient traumatisé grave

tt |>
  dplyr::select(triage) |>
  drop_na() |>
  ggplot() +
  aes(x = triage, fill = triage) +
  geom_bar(stat = "count") +
  labs(
    title = "Qualité de l'orientation du patient traumatisé grave",
    subtitle = "",
    x = "",
    y = "n",
    caption = "",
    fill = ""
  ) +
  theme_light() +
  scale_fill_jama() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    plot.subtitle = element_text(size = 12),
    axis.title.x = element_text(size = 12),
    legend.title = element_text(size = 12),
    axis.title.y = element_text(
      size = 12,
      angle = 90,
      vjust = .5
    ),
    axis.text.x = element_text(size = 12),
    axis.text.y = element_text(size = 12),
    legend.position = "none"
  )
```

## ISS non renseignés

```{r}
#| label: iss1prepa

issn <-  which(is.na(tt$iss_score & tt$niveau_tc_1 == "Niveau 1" ))
```

On considère que tous les patients orientés d’emblée en niveau 1 & dont l'ISS n'a pas été renseigné sont sur triés soit `r length(issn)` cas.

```{r}
#| label: tbl-iss1
#| tbl-cap: Qualité du triage (ISS non renseignés adressés en TC 1 considérés comme sur-triés)

zz <- tt$triage
zz[issn] = "Sur-triage"
zz <- tt |> 
  mutate(triage2 = zz) |> 
  dplyr::select(triage2) |> 
    drop_na(triage2)
llf <- ldf(zz)

zz |>
  tbl_summary(missing = "no",
              label = list(triage2 = "Qualité du triage")) |>
  add_n() |>
  bold_labels() |>
  modify_header(label ~ " ") |>
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "princiss", lg = TRUE)
```




## Population & PEC

```{r}
#| label: critprinc2prepa

zz <- tt |>
  dplyr::select(age, sexe, triage, demande_vsav, intox) |>
  drop_na(triage)
llf <- ldf(zz)
```

`r llf`

```{r}
#| label: tbl-reguldemog
#| tbl-cap: Qualité du triage selon la population & les circonstances de prise en charge

zz |>
  tbl_summary(
    by = triage,
    percent = "row",
    missing = "no"
  ) |>
  modify_spanning_header(paste0("stat_", 1:3) ~ "**Qualité du triage**") |>
  add_n() |>
  add_p() |>
  bold_labels() |>
  modify_header(label ~ " ") |>
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "reguldemog", lg = TRUE)
```

`r llf`. Il y a plus de sur-triage chez les hommes par rapport au normo-triage.

```{r}
#| label: tbl-sexe
#| tbl-cap: Qualité du triage selon le sexe du patient

ll <- glm(sexe~triage, data =tt, family = {binomial})
llem <- emmeans(ll, "triage")
pairs(llem, name = "Qualité du triage") |> 
  kbl(longtable = TRUE, booktabs = TRUE) |>
      kable_styling(latex_options = c("scale_down", "repeat_header")) |> 
  row_spec(0, bold = TRUE) |> 
  footnote(general = "Test de Dunn. ",general_title = "")

```


```{r}
#| label: fig-trisexe
#| fig-cap: Qualité du triage selon le sexe du patient

tt |>
  dplyr::select(sexe, triage) |>
  drop_na() |>
  ggplot(aes(x = sexe, fill = triage)) +
  geom_bar(position = "fill") +
  scale_color_jama() +
  scale_y_continuous(labels = scales::percent_format(scale = 100)) +
  labs(
    title = "Proportion de sur-triage selon le sexe",
    x = "Sexe",
    y = "Proportion de sur-triage"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    axis.title.x = element_blank(),
    legend.title = element_blank(),
    axis.title.y = element_blank(),
    axis.text.x = element_text(size = 12),
    axis.text.y = element_text(size = 12),
    legend.position = "right"
  )
```

## Critères de Vittel

```{r}
#| label: vittelprepa

zz <- tt |>
  dplyr::select(triage, starts_with("vittel")) |>
  drop_na(triage)
llf <- ldf(zz)
```

`r llf`



```{r}
#| label: tbl-vittel
#| tbl-cap: Qualité du triage selon les critères de Vittel

zz |>
  tbl_summary(
    by = triage,
    percent = "row",
    missing = "no",
    value = list(
      vittel_examen_initial = "Oui",
      vittel_circonstance = "Oui",
      vittel_pec = "Oui",
      vittel_lesions = "Oui",
      vittel_caracteristiques = "Oui"
    )
  ) |>
    modify_spanning_header(paste0("stat_", 1:3) ~ "**Qualité du triage**") |>
  add_n() |>
  add_p() |>
  bold_labels() |>
  modify_header(label ~ " ") |>
  modify_footnote_header(" Les chiffres indiqués sont les réponses *Oui*",
    columns = all_stat_cols(),
    replace = FALSE,
    text_interpret = c("md")
  ) |>
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "vittel", lg = TRUE)
```

Les tests post-hoc qui comparent pour un item les différentes réponses n'ont de sens que s'il existe une différence significative globale c'est à dire pour les items `Examen initial` & `Lésions`.


```{r}
#| label: tbl-vitell1
#| tbl-cap: "Qualité du triage selon le critèresde Vittel: examen initial"

ll <- glm(vittel_examen_initial~triage, data =tt, family = {binomial})
llem <- emmeans(ll, "triage")
pp <- pairs(llem, name = "Qualité du triage")
pp |> 
  kbl(longtable = TRUE, booktabs = TRUE) |>
      kable_styling(latex_options = c("scale_down", "repeat_header")) |> 
  row_spec(0, bold = TRUE) |> 
  footnote(general = "Test de Dunn. ",general_title = "")
 if (expx) {
      pp |>
        as_tibble() |>
        write_ods(path = classeur, sheet = "vittel1", append = TRUE)
    }
```

```{r}
#| label: fig-vittel1
#| fig-cap: "Qualité du triage selon le critère de Vittel -- Examen initial"

llem |> 
  plot(comparisons = TRUE) +
  labs(title = "Qualité du triage selon le critère de Vittel \n examen initial",
      subtitle = "",
      x = "",
      y = "",
      caption = "Les barres bleues représentent les intervalles de confiance. \n Les flèches rouges indiquent les comparaisons entre eux. \n Si une flèche chevauche une flèche d’un autre groupe la différence n’est pas significative.",
      fill = "") +
  theme_light() +
  scale_fill_jama() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    plot.subtitle = element_text(size = 12),
    axis.title.x = element_text(size = 12),
    legend.title = element_text(size = 12),
    axis.title.y = element_text(
      size = 12,
      angle = 0,
      vjust = .5
    ),
  axis.text.x = element_blank(),
  axis.text.y = element_text(size = 12),
  legend.position = "none"
  )
```

```{r}
#| label: tbl-vitell2
#| tbl-cap: "Qualité du triage selon le critère de Vittel : Lésions"

ll <- glm(vittel_lesions~triage, data =tt, family = {binomial})
llem2 <- emmeans(ll, "triage")
pp <- pairs(llem2, name = "Qualité du triage") 
pp |> 
  kbl(longtable = TRUE, booktabs = TRUE) |>
      kable_styling(latex_options = c("scale_down", "repeat_header")) |> 
  row_spec(0, bold = TRUE) |> 
  footnote(general = "Test de Dunn. ",general_title = "critères de Vittel (examen initial)")
 if (expx) {
      pp |>
        as_tibble() |>
        write_ods(path = classeur, sheet = "vittel2", append = TRUE)
    }
```

```{r}
#| label: fig-vittel2
#| fig-cap: "Qualité du triage selon le critère de Vittel -- Lésions"

llem2 |> 
  plot(comparisons = TRUE) +
    labs(title = "Qualité du triage selon le critère de Vittel \n Lésions",
      subtitle = "",
      x = "",
      y = "",
      caption = "Les barres bleues représentent les intervalles de confiance. \n Les flèches rouges indiquent les comparaisons entre eux. \n Si une flèche chevauche une flèche d’un autre groupe la différence n’est pas significative.",
      fill = "") +
  theme_light() +
  scale_fill_jama() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    plot.subtitle = element_text(size = 12),
    axis.title.x = element_text(size = 12),
    legend.title = element_text(size = 12),
    axis.title.y = element_text(
      size = 12,
      angle = 0,
      vjust = .5
    ),
  axis.text.x = element_blank(),
  axis.text.y = element_text(size = 12),
   legend.position = "none"
  )
```



```{r}
#| label: fig-triagevittel
#| fig-cap: Qualité du triage selon les critères de Vittel

tt |>
  dplyr::select(triage, starts_with("vittel")) |>
  pivot_longer(
    cols = starts_with("vittel"),
    names_to = "item",
    values_to = "value"
  ) |>
  mutate(item = fct_recode(item,
    "Caractéristiques" = "vittel_caracteristiques",
    "Circonstance" = "vittel_circonstance",
    "Examen initial" = "vittel_examen_initial",
    "Lésions" = "vittel_lesions",
    "PEC" = "vittel_pec"
  )) |>
  dplyr::filter(value == "Oui") |>
  ggplot(aes(x = item, fill = triage)) +
  geom_bar(position = "fill") +
  scale_color_jama() +
  scale_y_continuous(labels = scales::percent_format(scale = 100)) +
  labs(
    title = "Proportion de sur-triage selon le sexe",
    x = "Sexe",
    y = "Proportion de sur-triage"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    axis.title.x = element_blank(),
    legend.title = element_blank(),
    axis.title.y = element_blank(),
    axis.text.x = element_text(size = 12),
    axis.text.y = element_text(size = 12),
    legend.position = "right"
  )
```

Les critères `Examen initial` & `Lésion` semblent être de meilleurs prédicteurs de la qualité du triage.

## Scores

```{r}
#| label: scoresprepa

zz <- tt |>
  dplyr::select(triage, trenau:iss_tranche) |>
  drop_na(triage)
llf <- ldf(zz)
```

`r llf`



```{r}
#| label: tbl-scores
#| tbl-cap: Qualité du triage selon les scores

zz |>
  tbl_summary(
    by = triage,
    percent = "row",
    missing = "no"
  ) |>
  add_n() |>
  add_p() |>
    modify_spanning_header(paste0("stat_", 1:3) ~ "**Qualité du triage**") |>bold_labels() |>
  modify_header(label ~ " ") |>
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "scores", lg = TRUE)
```

```{r}
#| label: tbl-llmgap
#| tbl-cap: Qualité du triage selon le MGAP

ll <- lm(mgap ~ triage, data =tt)
llemm <- emmeans(ll, "triage")
pp <- pairs(llemm, name = "Qualité du triage")
pp |> 
  kbl(longtable = TRUE, booktabs = TRUE) |>
      kable_styling(latex_options = c("scale_down", "repeat_header")) |> 
  row_spec(0, bold = TRUE) |> 
  footnote(general = "Test de Dunn. ",general_title = "")
 if (expx) {
      pp |>
        as_tibble() |>
        write_ods(path = classeur, sheet = "llmpag", append = TRUE)
    }
```

```{r}
#| label: fig-llmgap1
#| fig-cap: Qualité du triage selon le MGAP

llemm |> 
  plot(comparisons = TRUE) +    labs(title = "Qualité du triage selon le MGAP",
      subtitle = "",
      x = "MGAP",
      y = "",
      caption = "Les barres bleues représentent les intervalles de confiance. \n Les flèches rouges indiquent les comparaisons entre eux. \n Si une flèche chevauche une flèche d’un autre groupe la différence n’est pas significative.",
      fill = "") +
  theme_light() +
  scale_fill_jama() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    plot.subtitle = element_text(size = 12),
    axis.title.x = element_text(size = 12),
    legend.title = element_text(size = 12),
    axis.title.y = element_text(
      size = 12,
      angle = 0,
      vjust = .5
    ),
  axis.text.x = element_text(size = 12),
  axis.text.y = element_text(size = 12),
   legend.position = "none"
  )
```


De manière prévisible ce sont les patients de gravité intermédiaires (TRENAU B) qui sont le plus souvent mal triés.

# Critères secondaires

## Critère 1

*Proportion de patients sous-triés sur les plages horaires.*


On défini les plages horaires comme suit :

- 7h-9h & 18h-21h: Relève
- 9h-18h: Jour
- 21h-7h: Nuit

```{r}
#| label: crit1prepa

zz <- tt |>
  mutate(hor = as.numeric(hour(horaire))) |>
  mutate(hor_rec = cut(hor,
    include.lowest = TRUE,
    right = FALSE,
    dig.lab = 4,
    breaks = c(0, 7, 9, 18, 21, 25),
    labels = c("Nuit", "Relève", "Jour", "Relève", "Nuit")
  )) |>
  dplyr::select(hor_rec, triage) |>
  drop_na()
  var_label(zz$hor_rec) <- "Horaire"
llf <- ldf(zz)
```

`r llf`


```{r}
#| label: tbl-horaires
#| tbl-cap: Triage selon les plages horaires

zz |>
  tbl_summary(
    by = triage, ,
    percent = "row",
    missing = "no"
  ) |>
     modify_spanning_header(paste0("stat_", 1:3) ~ "**Qualité du triage**") |>
  add_n() |>
  add_p() |>
  bold_labels() |>
  modify_header(label ~ " ") |>
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "horaire", lg = TRUE)
``` 

## Critère 2 & 3

*Proportion de sous-triage chez les patients avec une intoxication alcoolique ou toxique supposée.*

```{r}
#| label: intoxprepa

zz <- tt |>
  dplyr::select(triage, intox) |>
  mutate(triage = fct_recode(triage,
    "Normo ou sur triage" = "Normo-triage",
    "Normo ou sur triage" = "Sur-triage")) |> 
    drop_na()
llf <- ldf(zz)
```


Vu le faible nombre de cas (une seule intoxication toxique) on regroupe les patients en un seul groupe `Intoxication alcoolique ou autre`. `r llf`

```{r}
#| label: tbl-intox
#| tbl-cap: Proportion de sous-triage chez les patients avec une intoxication alcoolique ou toxique supposée

zz |>
  tbl_summary(
    by = triage,
    percent = "row",
    missing = "no"
  ) |>
  modify_spanning_header(paste0("stat_", 1:2) ~ "**Qualité du triage**") |>
  add_n() |>
  add_p() |>
  bold_labels() |>
  modify_header(label ~ " ") |>
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "intox", lg = TRUE)
```

```{r}
#| label: fig-intox
#| fig-cap: Proportion de sous-triage chez les patients avec une intoxication alcoolique ou toxique supposée

zz |>
  dplyr::select(intox, triage) |>
  drop_na() |>
  ggplot(aes(x = intox, fill = triage)) +
  geom_bar(position = "fill") +
  scale_color_jama() +
  scale_y_continuous(labels = scales::percent_format(scale = 100)) +
  labs(
    title = "Proportion de sous-triage chez les patients avec une\n intoxication alcoolique ou toxique supposée",
    x = "Intoxication supposée",
    y = "% sous-triage"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 12, face = "bold"),
    axis.title.x = element_text(size = 12),
    legend.title = element_blank(),
    axis.title.y = element_text(size = 12),
    axis.text.x = element_text(size = 12),
    axis.text.y = element_text(size = 12),
    legend.position = "right"
  )
rm(zz)
```


## Critère 4

*Corrélation entre le grade de TRENAU et le niveau du trauma center pour l’admission finale.*

```{r}
#| label: trenauprepa

zz <- tt |>
  mutate(trenau2 = fct_recode(trenau,
     "A+B" = "A",
     "A+B" = "B"
   )) |>
  dplyr::select(trenau, trenau2, nivfin) |>
  drop_na()
llf <- ldf(zz)
```


En l'absence de TC de niveau 2 dans la région les patients TRENAU B devraient être orientés vers un TC de niveau 1. Soixante patients (20 %) classés `Trenau B` auraient du être adressés à un TC niveau II. `r llf`

```{r}
#| label: tbl-trenau
#| tbl-cap: Corrélation entre le grade de TRENAU et le niveau du trauma center pour l’admission finale.


zz |>
  dplyr::select(trenau, nivfin) |>
  tbl_summary(
    by = nivfin,
    missing = "no",
    percent = "row"
  ) |>
  add_n() |>
  modify_spanning_header(c("stat_1", "stat_2") ~ "**Destination Finale**") |>
  add_p() |>
  bold_labels() |>
  modify_header(label ~ " ") |>
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "treneau", lg = TRUE)
```

Un quart des patients TRENAU A ou B ont été sur-triès.  

## Critère 5

*Nombre de patients avec un Shock-index positif lors de la prise en charge du SMUR orientés vers un trauma center de niveau 1.*

```{r}
#| label: shockprepa

zz <- tt |>
dplyr::select(shock, niveau_tc_1) |>
  drop_na()
llf <- ldf(zz)
```

`r llf`


```{r}
#| label: tbl-si1
#| tbl-cap: Patients avec un Shock-index positif  orientés vers un trauma center de niveau 1

zz |>
  tbl_summary(
    by = niveau_tc_1,
    missing = "no",
    percent = "row"
  ) |>
  add_n() |>
  modify_spanning_header(c("stat_1", "stat_2") ~ "**Destination Finale**") |>
  add_p() |>
  bold_labels() |>
  modify_header(label ~ " ") |>
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "shock1", lg = TRUE)
```

### Recherche d'un seuil

On cherche le seuil *idéal* pour trier les patients entre un TC de niveau 1 & un TC de niveau 3. Pour cela on trace une courbe ROC & on calcule l'AUC (Aire sous la courbe). On considère habituellement qu'un AUC supérieur à 0,7 est acceptable, supérieur à 0,8 bon & supérieur à 0,9 excellent.

```{r}
#| label: fig-rocshok
#| fig-cap: Prédiction de l'orientation finale par le Shock-Index
#| fig-asp: 1

bb <- tt |>
  drop_na(nivfin) |>
  ## Réordonnancement de tt$nivfin
  mutate(nivfin = fct_relevel(
    nivfin,
    "Niveau 3", "Niveau 1"
  )) |>
  ggplot() +
  aes(d = nivfin, m = shock_index) +
  geom_roc(increasing = FALSE) +
  style_roc(
    theme = theme_light,
    minor.breaks = seq(0, 1, by = 0.05),
        xlab = "1 - sécificité", 
    ylab = "Sensibilité"
  ) +
  #  geom_rocci(sig.level = .05, ci.at = 0.7) +
  geom_abline(aes(intercept = 0, slope = 1), linetype = 2, color = "grey50") +
  ggtitle("Prédiction de l'orientation finale par le Shock-Index")
aucx <- paste("AUC =", round(calc_auc(bb)$AUC, 2))
bb +
  annotate("text",
    x = .85, y = .2, size = 4,
    label = aucx
  )
```



Le shock-index utilisé seul est un mauvais prédicateur de l'orientation finale (`r aucx`). Néanmoins le *meilleur* seuil serait autour de 0,7 mais l'échantillon est trop petit pour conclure & le design de l'étude inadapté

```{r}
#| label: tbl-shockmod
#| tbl-cap: Prédiction de l'orientation finale par le Shock-Index (seuil à 0,7)

tt |>
  mutate(shock = ifelse(shock_index > 0.7, "Positif", "Négatif")) |>
  dplyr::select(shock, niveau_tc_1) |>
  tbl_summary(
    by = niveau_tc_1,
    missing = "no",
    percent = "row"
  ) |>
  add_n() |>
  modify_spanning_header(c("stat_1", "stat_2") ~ "**Destination Finale**") |>
  add_p() |>
  bold_labels() |>
  modify_header(label ~ " ") |>
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "shockmod", lg = TRUE)
```




## Critère 6

*Nombre de patients avec un Shock-index positif lors de la prise en charge du SMUR et ayant eu une transfusion sanguine intra-hospitalière.*

```{r}
#| label: transfuprepa

zz <- tt |>
dplyr::select(shock, transfusion_sanguine) |>
  drop_na()
llf <- ldf(zz)
```

`r llf`

```{r}
#| label: tbl-transfu
#| tbl-cap: Patients avec un Shock-index positif lors de la prise en charge du SMUR et ayant eu une transfusion sanguine intra-hospitalière.

zz |>
  tbl_summary(
    by = transfusion_sanguine,
    missing = "no",
    percent = "row"
  ) |>
  add_n() |>
  modify_spanning_header(c("stat_1", "stat_2") ~ "**Transfusion sanguine**") |>
  add_p() |>
  bold_labels() |>
  modify_header(label ~ " ") |>
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "transfu", lg = TRUE)
```

Vu le très faible nombre de patients ayant eu une transfusion sanguine intra-hospitalière, il n'est pas possible de conclure.


## Critère 7
*Nombre de patients ayant un score de MGAP  entre 23 et 29 et une admission in fine dans un trauma center de niveau 3.*

*Nombre de patients ayant un score de MGAP <18 et une admission in fine dans un trauma center de niveau 1*

```{r}
#| label: mgapprepa

zz <- tt |> 
  dplyr::select(mgap3, nivfin) |>
  drop_na()
llf <- ldf(zz)
```

`r llf`


```{r}
#| label: tbl-mgap
#| tbl-cap: Score MGAP & destination finale

zz |>
  tbl_summary(
    by = nivfin,
    missing = "no",
    percent = "row"
  ) |>
  add_n() |>
  modify_spanning_header(c("stat_1", "stat_2") ~ "**Destination Finale**") |>
  add_p() |>
  bold_labels() |>
  modify_header(label ~ " ") |>
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "mgap", lg = TRUE)
```

Trois quarts des patients sont orientés correctement si on se fie uniquement au score MGAP. 

### Recherche d'un seuil MGAP

On cherche le seuil *idéal* pour trier les patients entre un TC de niveau 1 & un TC de niveau 3. Pour cela on trace une courbe ROC & on calcule l'AUC (Aire sous la courbe). On considère habituellement qu'un AUC supérieur à 0,7 est acceptable, supérieur à 0,8 bon & supérieur à 0,9 excellent.

```{r}
#| label: fig-rocmgap
#| fig-cap: Prédiction de l'orientation finale par le score MGAP
#| fig-asp: 1

bb <- tt |>
  drop_na(nivfin) |>
  ## Réordonnancement de tt$nivfin
  mutate(nivfin = fct_relevel(
    nivfin,
    "Niveau 3", "Niveau 1"
  )) |>
  ggplot() +
  aes(d = nivfin, m = mgap) +
  geom_roc(increasing = TRUE) +
  style_roc(
    theme = theme_light,
    minor.breaks = seq(0, 1, by = 0.05), 
    xlab = "1 - sécificité", 
    ylab = "Sensibilité"
  ) +
  geom_abline(aes(intercept = 0, slope = 1), linetype = 2, color = "grey50") +
  ggtitle("Prédiction de l'orientation finale par le score MGAP")
aucx <- paste("AUC =", round(calc_auc(bb)$AUC, 2))
bb +
  annotate("text",
    x = .85, y = .2, size = 4,
    label = aucx
  )
```

La prédiction demeure médiocre (`r aucx`). Le *meilleur* seuil semble se confirmer autour de 29 mais l'échantillon est trop petit pour conclure & le design de l'étude inadapté.



# Technique

L'analyse statistique a été réalisée avec le logiciel **R**[@rstat] & divers packages. Outre ceux cités dans le texte on a utilisé en particulier `tidyverse` [@tidy] & `baseph` [@baseph].

Le seuil de signification $\alpha$ a été fixé à \num{0.05} & la puissance à \num{0.8}. 

Pour les variables continues les comparaisons entre trois classes (par exemple qualité du triage) ont été réalisées avec le test de Kruskal-Wallis -- ANOVA unidirectionnelle sur rangs) pour les variables continues.  Si ces tests montraient une différence significative des comparaisons des niveaux deux à deux ou tests post-hoc pouvaient être réalisées (test de Dunn avec ajustement par la méthode de Bonferroni pour comparaisons multiples). Les comparaisons entre deux classes ont été réalisées avec le test de Wilcoxon. L'étude des variables discrètes a été réalisée avec le test du Chi-deux de Pearson. 

L'analyse statistique a été réalisée avec le logiciel **R**[@rstat].



\addcontentsline{toc}{chapter}{Bibliographie}
