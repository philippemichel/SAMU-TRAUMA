---
subtitle: "Rapport statistique v1.0"
cache: false
---

```{r}
#| label: info

rm(list = ls())
load("datas/samutraumas.RData")
#
library(corrplot)
library(baseph)
library(ggsci)
library(janitor)
library(visdat)
library(GGally)
library(tidyverse)
library(kableExtra)
library(gtsummary)
library(forestmodel)
library(fmsb)
library(labelled)
#
classeur <- "samutraumas.ods"
expx <- FALSE
if (expx) {
  file.create(classeur)
  file.remove(classeur)
  write_ods(iris, classeur)
}

# sessionInfo()
theme_gtsummary_language(language = "fr", decimal.mark = ",")
theme_gtsummary_journal(journal = "jama")
options(OutDec = ",")
ptest <- list(all_continuous() ~ "wilcox.test", all_categorical() ~ "chisq.test")
#
load("datas/samutraumas.RData")
```



# Qualité des données

## Corrélations anormales

```{r}
#| label: cor-prep

corx <- function(prof, titx) {
  tit <- paste0("Corrélations ", titx)
  prof |>
    remove_constant() |>
    mutate_if(is.factor, as.numeric) |>
    dplyr::select(!id) |>
    ggcorr(drop = TRUE, hjust = 0.9) +
    labs(
      title = tit,
      y = "n",
      caption = "Corrélations. Validation interne du questionnaire."
    ) +
    theme_minimal() +
    theme(
      plot.title = element_text(size = 14, face = "bold"),
      plot.subtitle = element_text(size = 12),
      axis.title.x = element_blank(),
      legend.title = element_blank(),
      axis.title.y = element_blank(), ,
      axis.text.x = element_text(size = 12),
      axis.text.y = element_text(size = 12),
      legend.position = "right"
    )
}
```


```{r}
#| label: fig-corregul
#| fig-cap: Corrélations internes
#| eval: true
tt |> 
#  dplyr::select(-id) |> 
corx("")
```

Les seules corrélations inattendues & potentiellement gênantes sont celles entre `vittel_circonstance`, `vittel_pec` & `iss_tranche`. 

## Données manquantes

```{r}
#| label: fig-manq-apt
#| fig-cap: Données manquantes (questionnaire patient)

tt |> 
  dplyr::select(-c(id, horaire)) |> 
vis_dat(palette = "qual")
```

Le score ISS est très mal documenté. 

# Descriptif

Pour tous les tableaux, en cas de réponse en Oui/Non, seule la réponse `Oui` est affichée.

Les données concernent `r nrow(tt)` cas & sont réparties sur trois fichiers :

-   Régulation (`r ncol(regulation) - 1` variables)
-   Intervention (`r ncol(intervention) - 1` variables)
-   Destination (`r ncol(destination) - 1` variables)

## Régulation

```{r}
#| label: tbl-regul
#| tbl-cap: Description de la population - Régulation

regulation |> 
  dplyr::select(-id) |> 
  tbl_summary() |> 
  add_n() |>
  bold_labels() |>
  modify_header(label ~ " ") |>
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "regul", lg = TRUE)
```




## Intervention

```{r}
#| label: tbl-inter
#| tbl-cap: Description de la population - Intervention

tt |> 
   dplyr::select(secondaire:transfusion_sanguine) |> 
  tbl_summary(missing = "no",
               type = list(secondaire ~ "dichotomous"),
             value = list(secondaire = "Oui",
                          demande_vsav = "Oui",
                          intox = "Oui",
                          vittel_examen_initial = "Oui",
                          vittel_circonstance = "Oui",
                          vittel_pec = "Oui",
                          vittel_lesions = "Oui",
                          vittel_caracteristiques = "Oui",
                          transfusion_sanguine = "Oui")
    ) |> 
  add_n() |>
  bold_labels() |>
  modify_header(label ~ " ") |>
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "regul", lg = TRUE)
```

## Destination

```{r}
#| label: tbl-desti
#| tbl-cap: Description de la population - Destination

destination |> 
  dplyr::select(-c(id, triage, starts_with("destination"))) |> 
  tbl_summary() |> 
  add_n() |>
  bold_labels() |>
  modify_header(label ~ " ") |>
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "desti", lg = TRUE)
```


# Critère principal

*Évaluation de l’orientation du patient traumatisé grave après bilan lésionnel post SMUR en sur trié, normo trié et sous trié.*

```{r}
#| label: tbl-princ1
#| tbl-cap: titre

tt |> 
  dplyr::select(triage) |> 
  tbl_summary( ) |> 
   add_n() |>
  bold_labels() |>
  modify_header(label ~ " ") |>
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "princ1", lg = TRUE)
```

## Population & PEC

```{r}
#| label: tbl-reguldemog
#| tbl-cap: Qualité du triage selon l a population & les circonstaces de prise en charge

tt |> 
  dplyr::select(age, sexe, triage,demande_vsav,intox) |> 
  tbl_summary(by = triage, 
              percent = "row",
              missing = "no") |> 
  add_n() |>
  add_p() |>
  bold_labels() |>
  modify_header(label ~ " ") |>
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "reguldemog", lg = TRUE)

```

Il y a plus de sur-triage chez les hommes. 

```{r}
#| label: fig-trisexe
#| fig-cap: Qualité du triage selon le sexe du patient

tt |> 
  dplyr::select(sexe, triage) |> 
  drop_na() |>
  ggplot(aes(x = sexe, fill = triage)) +
  geom_bar(position = "fill") +
  scale_color_jama() +
  scale_y_continuous(labels = scales::percent_format(scale = 100)) +
  labs(
    title = "Proportion de sur-triage selon le sexe",
    x = "Sexe",
    y = "Proportion de sur-triage"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    axis.title.x = element_blank(),
    legend.title = element_blank(),
    axis.title.y = element_blank(),
    axis.text.x = element_text(size = 12),
    axis.text.y = element_text(size = 12),
    legend.position = "right"
  )
```

## Critères de Vittel

```{r}
#| label: tbl-vittel
#| tbl-cap: Qualité du triage selon les critères de Vittel

tt |> 
  dplyr::select(triage, starts_with("vittel")) |> 
  tbl_summary(by = triage, 
              percent = "row",
              missing = "no", 
                value = list(vittel_examen_initial = "Oui",
                          vittel_circonstance = "Oui",
                          vittel_pec = "Oui",
                          vittel_lesions = "Oui",
                          vittel_caracteristiques = "Oui")
    )|> 
  add_n() |>
  add_p() |>
  bold_labels() |>
  modify_header(label ~ " ") |>
  modify_footnote_header(" Les chiffres indiqués sont les réponses *Oui*",
                                  columns = all_stat_cols(),
  replace = FALSE,
  text_interpret = c("md")
)
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "vittel", lg = TRUE)
```

## Scores


```{r}
#| label: tbl-scores
#| tbl-cap: Qualité du triage selon les scores

tt |> 
  dplyr::select(triage, trenau, shock_index, mgap) |> 
  tbl_summary(by = triage, 
              percent = "row",
              missing = "no") |> 
  add_n() |>
  add_p() |>
  bold_labels() |>
  modify_header(label ~ " ") |>
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "scores", lg = TRUE)
```

L'ISS ne peut être pris en compte vu le très faible nombre (3) de réponses.

# Critères secondaires

## Critère 1

*Proportion de patients sous-triés sur les plages horaires.*


On défini les plages horaires comme suit :

- 7h-9h & 18h-21h: Relève
- 9h-18h: Jour
- 21h-7h: Nuit

```{r}
#| label: tbl-horaires
#| tbl-cap: Triage selon les plages horaires

tt |> 
  mutate(hor = as.numeric(hour(horaire))) |> 
mutate(hor_rec = cut(hor,
  include.lowest = TRUE,
  right = FALSE,
  dig.lab = 4,
  breaks = c(0, 7, 9, 18, 21, 25),
  labels = c("Nuit", "Relève", "Jour", "Relève", "Nuit"))) |> 
  dplyr::select(hor_rec, triage) |>
  tbl_summary(by = triage,, 
              percent = "row",
              missing = "no") |> 
    add_n() |>
  add_p() |>
  bold_labels() |>
  modify_header(label ~ " ") |>
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "horaire", lg = TRUE)

```

On ne voit pas de différence dans la qualité du triage selon la plage horaire . 

## Critère 2 & 3

*Proportion de sous-triage chez les patients avec une intoxication alcoolique ou toxique supposée.*

Vu le faible nombre de cas (une seule intoxication toxique) on regroupe les patients en un seul groupe `Intoxication alcoolique ou autre`. 

```{r}
#| label: tbl-intox
#| tbl-cap: Proportion de sous-triage chez les patients avec une intoxication alcoolique ou toxique supposée

zz <- tt |> 
mutate(triage_rec = fct_recode(triage,
    "NORMO ou SUR-TRIAGE" = "NORMO",
    "NORMO ou SUR-TRIAGE" = "SUR",
    "SOUS-TRIAGE" = "SOUS"
  )) 
var_label(zz$triage_rec) <- "Qualité du triage"
zz |> 
  dplyr::select(triage_rec, intox) |> 
  tbl_summary(by = triage_rec, 
              percent = "row",
              missing = "no") |> 
      add_n() |>
  add_p() |>
  bold_labels() |>
  modify_header(label ~ " ") |>
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "intox", lg = TRUE)
```

```{r}
#| label: fig-intox
#| fig-cap: Proportion de sous-triage chez les patients avec une intoxication alcoolique ou toxique supposée

zz |> 
  dplyr::select(intox, triage_rec) |> 
  drop_na() |>
  ggplot(aes(x = intox, fill = triage_rec)) +
  geom_bar(position = "fill") +
  scale_color_jama() +
  scale_y_continuous(labels = scales::percent_format(scale = 100)) +
  labs(
    title = "Proportion de sous-triage chez les patients avec une intoxication alcoolique ou toxique supposée",
    x = "Intoxication supposée alcoolique ou autre",
    y = "% sous-triage"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    axis.title.x = element_text(size = 12),
    legend.title = element_blank(),
    axis.title.y = element_text(size = 12),
    axis.text.x = element_text(size = 12),
    axis.text.y = element_text(size = 12),
    legend.position = "right"
  )
rm(zz)
```


## Critère 4

*Corrélation entre le grade de TRENAU et le niveau du trauma center pour l’admission finale.*

```{r}
#| label: tbl-trenau
#| tbl-cap: Corrélation entre le grade de TRENAU et le niveau du trauma center pour l’admission finale.

destf <- function(d1,d2){
  dd <- d1 
  ww <- which(!is.na(d2))
  dd[ww] <- d2[ww]
  return(dd)
}

c <- destf(tt$niveau_tc_1,tt$niveau_tc_2) ## Recodage de c
c <- c |>
  fct_recode(
    "Niveau 1" = "1",
    "Niveau 3" = "3"
  )


tt |> 
  mutate(nivfin = c) |> 
  dplyr::select(trenau, nivfin) |>
  tbl_summary(
    by = nivfin,
    missing = "no")|> 
        add_n() |>
  modify_spanning_header(c("stat_1", "stat_2") ~ "**Destination Finale**") |> 
  add_p() |>
  bold_labels() |>
  modify_header(label ~ " ") |>
  pexptabph(exp = expx, nomfich = classeur, nomsheet = "treneau", lg = TRUE)

```



## Critère 5

*Nombre de patients avec un Shock-index positif lors de la prise en charge du SMUR orientés vers un trauma center de niveau 1.*



## Critère 6

*Nombre de patients avec un Shock-index positif lors de la prise en charge du SMUR et ayant eu une transfusion sanguine intra-hospitalière.*

# Technique

L'analyse statistique a été réalisée avec le logiciel **R**[rstat] & divers packages. Outre ceux cités dans le texte on a utilisé en particulier `tidyverse` [tidy] & `baseph` [baseph].

Un dépôt GitHub a été utilisé qui ne comprend que le code & non les données ou résultats. Au besoin un faux tableau de données sera présenté pour permettre des tests.

<https://github.com/philippemichel/SAMU-TRAUMAS/>


\addcontentsline{toc}{chapter}{C. Bibliographie}
